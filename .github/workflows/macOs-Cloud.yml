name: macOS-Cloud CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  setup-ngrok:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download and setup Ngrok
        run: |
          curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-darwin-amd64.zip -o ngrok.zip
          unzip ngrok.zip
          ./ngrok config add-authtoken ${{ secrets.NGR_AUTH_TOKEN }}
          ./ngrok tcp 5900 &

      - name: Wait for Ngrok to start
        run: sleep 10

      - name: Get Ngrok public URLs
        id: ngrok
        run: |
          VNC_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[] | select(.config.addr == "tcp://0.tcp.ngrok.io:5900").public_url')
          echo "VNC_URL=${VNC_URL}" >> $GITHUB_ENV

      - name: Retrieve VNC IP and password
        run: |
          VNC_IP=$(echo $VNC_URL | sed 's/tcp:\/\///' | cut -d: -f1)
          VNC_PORT=$(echo $VNC_URL | sed 's/tcp:\/\///' | cut -d: -f2)
          PASSWORD=$(openssl rand -base64 12)
          echo "VNC_IP=${VNC_IP}" >> $GITHUB_ENV
          echo "VNC_PORT=${VNC_PORT}" >> $GITHUB_ENV
          echo "PASSWORD=${PASSWORD}" >> $GITHUB_ENV

      - name: Enable Remote Management (VNC) on macOS
        run: |
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -access -on -clientopts -setvnclegacy -vnclegacy yes -setvncpw -vncpw ${PASSWORD} -restart -agent -privs -all

      - name: Display Connection Info
        run: |
          echo "MacOS system running with Remote Management (VNC) enabled."
          echo ""
          echo "Connect to the macOS machine via VNC using:"
          echo "vnc://davide:${PASSWORD}@${VNC_IP}:${VNC_PORT}"

      - name: Save connection info to file
        run: |
          echo "VNC IP Address: ${{ env.VNC_IP }}" > connection_info.txt
          echo "VNC Port: ${{ env.VNC_PORT }}" >> connection_info.txt
          echo "Username: davide" >> connection_info.txt
          echo "Password: ${{ env.PASSWORD }}" >> connection_info.txt

      - name: Upload connection info
        uses: actions/upload-artifact@v3
        with:
          name: connection-info
          path: connection_info.txt
